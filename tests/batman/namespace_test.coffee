QUnit.module "Batman namespace"

# generated against 0.16 with:
# n = []; for (k in Batman) { n.push(k) }; JSON.stringify(n)
KEYS = ["version","config","container","exportHelpers","exportGlobals","_Batman","typeOf","extend","mixin","unmixin","functionName","_functionName","isChildOf","_isChildOf","setImmediate","clearImmediate","forEach","objectHasKey","contains","get","getPath","escapeHTML","unescapeHTML","translate","t","redirect","initializeObject","Inflector","helpers","developer","Event","PropertyEvent","EventEmitter","LifecycleEvents","Enumerable","SimpleHash","AssociationCurator","SimpleSet","Property","Keypath","Observable","DOM","BindingDefinitionOnlyObserve","Object","BindingParser","ValidationError","StorageAdapter","RestStorage","LocalStorage","SessionStorage","Encoders","ParamsReplacer","ParamsPusher","NamedRouteQuery","Dispatcher","Route","ControllerActionRoute","CallbackActionRoute","Hash","RenderCache","Controller","Set","ErrorsSet","SetProxy","BinarySetOperation","SetUnion","SetIntersection","SetComplement","StateMachine","DelegatingStateMachine","Model","Proxy","AssociationProxy","HasOneProxy","BelongsToProxy","PolymorphicBelongsToProxy","Accessible","TerminalAccessible","URI","Request","SetObserver","SetSort","AssociationSet","PolymorphicAssociationSet","SetMapping","SetIndex","PolymorphicAssociationSetIndex","AssociationSetIndex","UniqueSetIndex","UniqueAssociationSetIndex","PolymorphicUniqueAssociationSetIndex","Navigator","PushStateNavigator","HashbangNavigator","RouteMap","RouteMapBuilder","App","Association","PluralAssociation","HasManyAssociation","PolymorphicHasManyAssociation","SingularAssociation","HasOneAssociation","BelongsToAssociation","PolymorphicBelongsToAssociation","Transaction","TransactionAssociationSet","Validator","Validators","RegExpValidator","PresenceValidator","NumericValidator","LengthValidator","InclusionValidator","ExclusionValidator","EmailValidator","ConfirmationValidator","AssociatedValidator","AssociatedFieldValidator","ControllerActionFrame","HTMLStore","View","BackingView","SelectView","DeferredRenderView","Tracking","IteratorView","IterationView","cache","uuid","expando","canDeleteExpando","noData","hasData","data","removeData","_data","acceptData","Filters"]

for k in KEYS
  test "has key #{k}", ->
    ok Batman[k]?
